name: Workflow CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: # Allows manual triggering
jobs:
  train_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set up job
        run: echo "Setting up job..."

      - name: Run actions/checkout@v3
        uses: actions/checkout@v3

      - name: Set up Python 3.12.7
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.7"

      - name: Check Env
        run: |
          python --version
          pip --version
          env | sort

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy scikit-learn mlflow matplotlib seaborn
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f MLProject/requirements.txt ]; then pip install -r MLProject/requirements.txt; fi

      - name: Run mlflow project
        shell: bash -l {0}
        working-directory: ./MLProject
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
          DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
        run: |
          mkdir -p data models
          echo "Ensuring data exists for demonstration"
          if [ -f "data/preprocessed_data.csv" ]; then
            echo "Using existing preprocessed data"
          else
            echo "Creating sample data for demonstration"
            echo "gender,age,hypertension,heart_disease,bmi,HbA1c_level,blood_glucose_level,smoking_history_ever,smoking_history_never,diabetes" > data/preprocessed_data.csv
            echo "0,45,0,0,23.5,5.2,85,1,0,0" >> data/preprocessed_data.csv  # diabetes = 0
            echo "1,54,1,0,28.1,6.3,140,1,0,1" >> data/preprocessed_data.csv # diabetes = 1
            echo "0,33,0,0,21.4,4.8,90,0,1,0" >> data/preprocessed_data.csv  # diabetes = 0
            echo "1,61,1,1,31.2,7.1,160,1,0,1" >> data/preprocessed_data.csv # diabetes = 1
            echo "0,40,0,0,24.0,5.5,88,0,1,0" >> data/preprocessed_data.csv  # diabetes = 0
            echo "1,50,1,0,29.0,6.8,135,1,0,1" >> data/preprocessed_data.csv # diabetes = 1
          fi
          # Run MLflow Project
          python modelling.py \
            --data_path=data/preprocessed_data.csv \
            --model_output=models/model.pkl \
            --test_size=0.2 \
            --random_state=42

      - name: Get latest MLflow run_id
        working-directory: ./MLProject
        run: |
          # Contoh perintah untuk mendapatkan run_id terakhir
          echo "RUN_ID=$(mlflow runs list -v | grep -v 'Run ID' | head -1 | awk '{print $4}')" >> $GITHUB_ENV
          echo "Latest MLflow run_id: ${{ env.RUN_ID }}"

      - name: Setup Git LFS
        run: |
          sudo apt-get install git-lfs
          git lfs install

      - name: Git LFS track
        run: |
          git lfs track "mlruns/**/model.pkl"
          git add .gitattributes

      - name: Upload to GitHub LFS
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }}.git
      
          if [ -d "MLProject/mlruns" ]; then
            git add MLProject/mlruns .gitattributes
            git commit -m "Save mlruns from CI run" || echo "No changes to commit"
            git push origin HEAD:${{ github.ref_name }}
          else
            echo "No mlruns directory found in MLProject. Skipping push."
          fi
          
      - name: Build Docker Model
        uses: docker/build-push-action@v5
        with:
          context: ./MLProject
          push: false
          tags: ml-workflow:latest

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Tag Docker Image
        if: github.event_name != 'pull_request'
        run: |
          docker tag ml-workflow:latest ${{ secrets.DOCKER_HUB_USERNAME }}/ml-workflow:latest
          docker tag ml-workflow:latest ${{ secrets.DOCKER_HUB_USERNAME }}/ml-workflow:${{ github.sha }}

      - name: Push Docker Image
        if: github.event_name != 'pull_request'
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/ml-workflow:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/ml-workflow:${{ github.sha }}

      - name: Post Log in to Docker Hub
        run: echo "Post login to Docker Hub completed"

      - name: Post Set up Python 3.12.7
        run: echo "Post Python setup completed"

      - name: Post Run actions/checkout@v3
        run: echo "Post checkout completed"

      - name: Complete job
        run: echo "Workflow completed successfully!"
